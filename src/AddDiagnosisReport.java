
import java.awt.print.PrinterException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author GAURAV
 */
public class AddDiagnosisReport extends javax.swing.JFrame {

    /**
     * Creates new form AddDiagnosisReport
     */
    public AddDiagnosisReport() {
        initComponents();
    }

    private void clearFields() {
        txtpid.setText("");
        txtdid.setText("");
        txtpname.setText("");
        txtage.setText("");
        txtbloodgroup.setText("");
        txtdname.setText("");
        txtbodyparts.setText("");
        tareapathology.setText("");
        tareaprescription.setText("");
        txtadvice.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtpname = new javax.swing.JTextField();
        txtpid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Buttonhome = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtbloodgroup = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tareaprescription = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtadvice = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtbodyparts = new javax.swing.JTextArea();
        Buttonreport = new javax.swing.JButton();
        Buttonprint = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        txtdid = new javax.swing.JTextField();
        txtdname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnFetch = new javax.swing.JButton();
        Buttonview1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tareapathology = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        Buttonview2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("NAME");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 107, -1, -1));

        txtpname.setEditable(false);
        txtpname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtpname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpnameActionPerformed(evt);
            }
        });
        jPanel2.add(txtpname, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 107, 150, -1));

        txtpid.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(txtpid, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 58, 150, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("PID");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 62, -1, -1));

        txtage.setEditable(false);
        txtage.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(txtage, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 165, 147, -1));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("AGE");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 165, -1, -1));

        Buttonhome.setBackground(new java.awt.Color(51, 51, 51));
        Buttonhome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Buttonhome.setForeground(new java.awt.Color(255, 255, 255));
        Buttonhome.setText("HOME");
        Buttonhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonhomeActionPerformed(evt);
            }
        });
        jPanel2.add(Buttonhome, new org.netbeans.lib.awtextra.AbsoluteConstraints(724, 575, 96, 48));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 416, 149, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("BLOOD GROUP");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 165, -1, -1));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("DESCRIPTION  ");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 454, -1, -1));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("BODY PART");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 514, -1, -1));

        txtbloodgroup.setEditable(false);
        txtbloodgroup.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(txtbloodgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 165, 173, -1));

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("ADVICE");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 575, 77, -1));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("  PATIENT INFORMATIONS");
        jLabel3.setOpaque(true);
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 6, 346, -1));

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 28)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("  PATIENT DIAGNOSIS REPORT");
        jLabel21.setOpaque(true);
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 336, 425, -1));

        tareaprescription.setColumns(20);
        tareaprescription.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tareaprescription.setRows(5);
        jScrollPane1.setViewportView(tareaprescription);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 454, 494, 42));

        txtadvice.setColumns(20);
        txtadvice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtadvice.setRows(5);
        jScrollPane2.setViewportView(txtadvice);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 575, 494, 48));

        txtbodyparts.setColumns(20);
        txtbodyparts.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtbodyparts.setRows(5);
        jScrollPane3.setViewportView(txtbodyparts);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 514, 494, 48));

        Buttonreport.setBackground(new java.awt.Color(51, 51, 51));
        Buttonreport.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Buttonreport.setForeground(new java.awt.Color(255, 255, 255));
        Buttonreport.setText("REPORT");
        Buttonreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonreportActionPerformed(evt);
            }
        });
        jPanel2.add(Buttonreport, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 575, -1, -1));

        Buttonprint.setBackground(new java.awt.Color(51, 51, 51));
        Buttonprint.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Buttonprint.setForeground(new java.awt.Color(255, 255, 255));
        Buttonprint.setText("PRINT");
        Buttonprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonprintActionPerformed(evt);
            }
        });
        jPanel2.add(Buttonprint, new org.netbeans.lib.awtextra.AbsoluteConstraints(1227, 575, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane5.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(868, 47, 479, 450));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("DOCTOR ID");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 66, -1, -1));

        txtdid.setEditable(false);
        txtdid.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(txtdid, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 58, 173, -1));

        txtdname.setEditable(false);
        txtdname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(txtdname, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 107, 173, -1));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("DOCTOR NAME");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 111, -1, -1));

        btnFetch.setBackground(new java.awt.Color(51, 51, 51));
        btnFetch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnFetch.setForeground(new java.awt.Color(255, 255, 255));
        btnFetch.setText("FETCH PATIENT");
        btnFetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFetchActionPerformed(evt);
            }
        });
        jPanel2.add(btnFetch, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 232, -1, 53));

        Buttonview1.setBackground(new java.awt.Color(51, 51, 51));
        Buttonview1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Buttonview1.setForeground(new java.awt.Color(255, 255, 255));
        Buttonview1.setText("ADD ");
        Buttonview1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Buttonview1ActionPerformed(evt);
            }
        });
        jPanel2.add(Buttonview1, new org.netbeans.lib.awtextra.AbsoluteConstraints(724, 454, 96, 42));

        tareapathology.setEditable(false);
        tareapathology.setColumns(20);
        tareapathology.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tareapathology.setRows(5);
        jScrollPane4.setViewportView(tareapathology);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 232, 303, 63));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("PATHOLOGY");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 232, -1, -1));

        Buttonview2.setBackground(new java.awt.Color(51, 51, 51));
        Buttonview2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Buttonview2.setForeground(new java.awt.Color(255, 255, 255));
        Buttonview2.setText("VIEW");
        Buttonview2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Buttonview2ActionPerformed(evt);
            }
        });
        jPanel2.add(Buttonview2, new org.netbeans.lib.awtextra.AbsoluteConstraints(724, 514, 96, 42));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 104, 1370, 760));

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("HOSPITAL MANAGEMENT SYSTEM");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("  DIAGNOSIS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(435, 435, 435)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonhomeActionPerformed
        new DiagnosisDashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ButtonhomeActionPerformed

    private void ButtonreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonreportActionPerformed
        int pid = Integer.parseInt(txtpid.getText());
        int did = Integer.parseInt(txtdid.getText());
        String name = txtpname.getText();
        int age = Integer.parseInt(txtage.getText());
        String bloodgroup = txtbloodgroup.getText();

        String dname = txtdname.getText();

        String bodyparts = txtbodyparts.getText();
        String pathology = tareapathology.getText();
        String descriptions = tareaprescription.getText();
        String advice = txtadvice.getText();
        jTextArea1.setText("""
                           **********CITY HOSPITAL********** 
                             ########PAITENT REPORT#######
                            
                            pid = """ + pid + "\n did = " + did + "\n name = " + name + "\n age = " + age + "\n bloodgroup  = " + bloodgroup + "\n dname = " + dname + "\n bodyparts  = " + bodyparts + "\n pathology = " + pathology + "\n description   = " + descriptions + "\n advice = " + advice + "\n \n \n            GET WELL SOON");

    }//GEN-LAST:event_ButtonreportActionPerformed

    private void ButtonprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonprintActionPerformed
        try {
            jTextArea1.print();
        } catch (PrinterException ex) {
            Logger.getLogger(AddDiagnosisReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonprintActionPerformed

    private void btnFetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFetchActionPerformed
        if (txtpid.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter id");
            return;

        }
        try {
            int pid = Integer.parseInt(txtpid.getText());
            Database db = new Database();
            PreparedStatement pst = db.con.prepareStatement("SELECT * FROM prescriptions WHERE pid = ?");
            pst.setInt(1, pid);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                String pname = rs.getString("pname");
                int did = rs.getInt("did");
                String dname = rs.getString("dname");
                int age = rs.getInt("age");
                String bloodGroup = rs.getString("bloodGroup");
                String pathology = rs.getString("pathology");

                txtpname.setText(pname);
                txtdid.setText(String.valueOf(did));
                txtdname.setText(dname);
                txtage.setText(String.valueOf(age));
                txtbloodgroup.setText(bloodGroup);
                tareapathology.setText(pathology);

                if (pathology == null) {
                    JOptionPane.showMessageDialog(null, "Prescription not available for the given Patient ID.");
                } else {

                }
            } else {
                JOptionPane.showMessageDialog(null, "No appointment records found for the given Patient ID.");
            }

            rs.close();
            pst.close();
            db.con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid Patient ID. Please enter a valid numeric ID.");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnFetchActionPerformed

    private void Buttonview1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Buttonview1ActionPerformed
        if (txtpid.getText().isEmpty() || txtdid.getText().isEmpty() || txtpname.getText().isEmpty()
                || txtage.getText().isEmpty() || txtbloodgroup.getText().isEmpty() || txtdname.getText().isEmpty()
                || txtbodyparts.getText().isEmpty() || tareapathology.getText().isEmpty()
                || tareaprescription.getText().isEmpty() || txtadvice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all the fields.");
            return;
        }
        try {
            int pid = Integer.parseInt(txtpid.getText());
            String pname = txtpname.getText();
            int did = Integer.parseInt(txtdid.getText());
            String dname = txtdname.getText();
            int age = Integer.parseInt(txtage.getText());
            String bloodGroup = txtbloodgroup.getText();
            String pathology = tareapathology.getText();
            String description = tareaprescription.getText();
            Date date = new Date();
            String bodypart = txtbodyparts.getText();
            String notes = txtadvice.getText();

            Database db = new Database();

            PreparedStatement insertStmt = db.con.prepareStatement("INSERT INTO diagnosis (pid, pname, did, dname, age, bloodGroup,pathology, description, date, bodypart, notes) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            insertStmt.setInt(1, pid);
            insertStmt.setString(2, pname);
            insertStmt.setInt(3, did);
            insertStmt.setString(4, dname);
            insertStmt.setInt(5, age);
            insertStmt.setString(6, bloodGroup);
            insertStmt.setString(7, pathology);

            insertStmt.setString(8, description);
            insertStmt.setDate(9, new java.sql.Date(date.getTime()));
            insertStmt.setString(10, bodypart);
            insertStmt.setString(11, notes);

            int rowsAffected = insertStmt.executeUpdate();

            if (rowsAffected == 1) {
                JOptionPane.showMessageDialog(null, "Data inserted successfully into the diagnosis table.");
                clearFields();
            } else {
                JOptionPane.showMessageDialog(null, "Failed to insert data into the diagnosis table.");
            }

            insertStmt.close();
            db.con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_Buttonview1ActionPerformed

    private void Buttonview2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Buttonview2ActionPerformed
        if (txtpid.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter id");
            return;

        }
        try {
            int pid = Integer.parseInt(txtpid.getText());

            Database db = new Database();

            PreparedStatement selectStmt = db.con.prepareStatement("SELECT * FROM diagnosis WHERE pid = ?");
            selectStmt.setInt(1, pid);

            ResultSet resultSet = selectStmt.executeQuery();

            if (resultSet.next()) {
                int did = resultSet.getInt("did");
                String pname = resultSet.getString("pname");
                String dname = resultSet.getString("dname");
                int age = resultSet.getInt("age");
                String bloodGroup = resultSet.getString("bloodGroup");
                String pathology = resultSet.getString("pathology");
                String description = resultSet.getString("description");
                // Date date = resultSet.getDate("date");
                String bodypart = resultSet.getString("bodypart");
                String notes = resultSet.getString("notes");

                // Set the retrieved data in the appropriate text fields
                txtdid.setText(String.valueOf(did));
                txtpname.setText(pname);
                txtdname.setText(dname);
                txtage.setText(String.valueOf(age));
                txtbloodgroup.setText(bloodGroup);
                tareapathology.setText(pathology);
                tareaprescription.setText(description);
                txtbodyparts.setText(bodypart);
                txtadvice.setText(notes);
            } else {
                JOptionPane.showMessageDialog(null, "No data found for the given patient ID.");
            }

            resultSet.close();
            selectStmt.close();
            db.con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_Buttonview2ActionPerformed

    private void txtpnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpnameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddDiagnosisReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buttonhome;
    private javax.swing.JButton Buttonprint;
    private javax.swing.JButton Buttonreport;
    private javax.swing.JButton Buttonview1;
    private javax.swing.JButton Buttonview2;
    private javax.swing.JButton btnFetch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea tareapathology;
    private javax.swing.JTextArea tareaprescription;
    private javax.swing.JTextArea txtadvice;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtbloodgroup;
    private javax.swing.JTextArea txtbodyparts;
    private javax.swing.JTextField txtdid;
    private javax.swing.JTextField txtdname;
    private javax.swing.JTextField txtpid;
    private javax.swing.JTextField txtpname;
    // End of variables declaration//GEN-END:variables
}
